0 s
1 norm_irf
2 norm_s
3 t_d
4 tsk
5 t_r
6 theta


TMath::Sqrt(TMath::Pi() / 2) * [0] * [1] * [2] * 
(
  - TMath::Exp(([0]*[0]-2*x*[3]+2*[3]*[4]+2*[3]*[6])/(2*[3]*[3]))
  *
   (
    TMath::Erf(([3]*([4]-x+[6]) + [0]*[0])/(TMath::Sqrt(2)*[0]*[3]))
    - 
    TMath::Erf(([3]*[4] +[0]*[0])/(TMath::Sqrt(2)*[0]*[3]))
   )
  +
  TMath::Exp(([0]*[0]-2*x*[5]+2*[5]*[4]+2*[5]*[6])/(2*[5]*[5]))
  *
    (
    TMath::Erf(([5]*([4]-x+[6]) + [0]*[0])/(TMath::Sqrt(2)*[0]*[5]))
    -
    TMath::Erf(([5]*[4] +[0]*[0])/(TMath::Sqrt(2)*[0]*[5]))
    )
)


0 l -> 7
1 s -> 0
2 norm_c -> 8
3 tsk -> 4
4 tsk_c -> cer_min -> 9
5 theta -> 6
6 norm_irf -> 1


1.0 / (TMath::Sqrt([0]*[0]+[1]*[1])) * TMath::Sqrt(TMath::Pi() / 2) * [0] * [1] * [2] * [6] *
(
TMath::Exp(-([3]+[5]-x)*([3]+[5]-x)/2/([0]*[0]+[1]*[1]))
*
TMath::Erf((-[3]*[0]*[0]+[5]*[1]*[1]+[0]*[0]*(x-[4])-[1]*[1]*x+[1]*[1]*(x-[4]))/(TMath::Sqrt(2)*[1]*[0]*TMath::Sqrt([0]*[0]+[1]*[1]))) 

- 

TMath::Exp(-([3]+[5]-x)*([3]+[5]-x)/2/([0]*[0]+[1]*[1]))
*
TMath::Erf((-[3]*[0]*[0]+[5]*[1]*[1]-[1]*[1]*x)/(TMath::Sqrt(2)*[1]*[0]*TMath::Sqrt([0]*[0]+[1]*[1]))))", min, max);

---------------------------------------------------------------------------

TMath::Sqrt(TMath::Pi() / 2) * [0] * [1] * [2] * 
(
  - TMath::Exp(([0]*[0]-2*x*[3]+2*[3]*[4]+2*[3]*[6])/(2*[3]*[3]))
  *
   (
    TMath::Erf(([3]*([4]-x+[6]) + [0]*[0])/(TMath::Sqrt(2)*[0]*[3]))
    - 
    TMath::Erf(([3]*[4] +[0]*[0])/(TMath::Sqrt(2)*[0]*[3]))
   )
  +
  TMath::Exp(([0]*[0]-2*x*[5]+2*[5]*[4]+2*[5]*[6])/(2*[5]*[5]))
  *
    (
    TMath::Erf(([5]*([4]-x+[6]) + [0]*[0])/(TMath::Sqrt(2)*[0]*[5]))
    -
    TMath::Erf(([5]*[4] +[0]*[0])/(TMath::Sqrt(2)*[0]*[5]))
    )
)

+

1.0 / (TMath::Sqrt([7]*[7]+[0]*[0])) * TMath::Sqrt(TMath::Pi() / 2) * [7] * [0] * [8] * 
(
TMath::Exp(-([4]+[6]-x)*([4]+[6]-x)/2/([7]*[7]+[0]*[0]))
*
TMath::Erf((-[4]*[7]*[7]+[6]*[0]*[0]+[7]*[7]*(x-[9])-[0]*[0]*x+[0]*[0]*(x-[9]))/(TMath::Sqrt(2)*[0]*[7]*TMath::Sqrt([7]*[7]+[0]*[0]))) 

- 

TMath::Exp(-([4]+[6]-x)*([4]+[6]-x)/2/([7]*[7]+[0]*[0]))
*
TMath::Erf((-[4]*[7]*[7]+[6]*[0]*[0]-[0]*[0]*x)/(TMath::Sqrt(2)*[0]*[7]*TMath::Sqrt([7]*[7]+[0]*[0]))))", min, max);


-----------------------------------------------------------------------------
    TF1 *Cshao_smear = new TF1("Cshao_smear", "
[0] * 
  (
    0.5 * (TMath::Erf((x-[1]-[2])/[3]/TMath::Sqrt(2))+TMath::Erf([2]/[3]/TMath::Sqrt(2))) 
    +
    (
      [4]/([5]-[4]) * 0.5 * TMath::Exp((-2*x*[4]+2*[4]*[1]+2*[4]*[2]-[3]*[3])/2/[4]/[4]) * (TMath::Erf((x-[1]-[2]-[3]*[3]/[4])/[3]/TMath::Sqrt(2))+TMath::Erf(([2]+[3]*[3]/[4])/[3]/TMath::Sqrt(2))) 
    )
    -
    (
      [5]/([5]-[4]) * 0.5 * TMath::Exp((-2*x*[5]+2*[5]*[1]+2*[5]*[2]-[3]*[3])/2/[5]/[5]) * (TMath::Erf((x-[1]-[2]-[3]*[3]/[5])/[3]/TMath::Sqrt(2))+TMath::Erf(([2]+[3]*[3]/[5])/[3]/TMath::Sqrt(2)))
    )





)", min, max);


------------------------------------------------------------

    TF1 *Cshao_smear = new TF1("Cshao_smear", "
(x > [6]) * [7] * exp(- (x-[2]-[1]) * (x-[2]-[1]) / 2. / ([3]*[3]+[8]*[8]))

[0] * 
  (
    0.5 * (TMath::Erf((x-[1]-[2])/[3]/TMath::Sqrt(2))+TMath::Erf([2]/[3]/TMath::Sqrt(2))) 
    +
    (
      [4]/([5]-[4]) * 0.5 * TMath::Exp((-2*x*[4]+2*[4]*[1]+2*[4]*[2]-[3]*[3])/2/[4]/[4]) * (TMath::Erf((x-[1]-[2]-[3]*[3]/[4])/[3]/TMath::Sqrt(2))+TMath::Erf(([2]+[3]*[3]/[4])/[3]/TMath::Sqrt(2))) 
    )
    -
    (
      [5]/([5]-[4]) * 0.5 * TMath::Exp((-2*x*[5]+2*[5]*[1]+2*[5]*[2]-[3]*[3])/2/[5]/[5]) * (TMath::Erf((x-[1]-[2]-[3]*[3]/[5])/[3]/TMath::Sqrt(2))+TMath::Erf(([2]+[3]*[3]/[5])/[3]/TMath::Sqrt(2)))
    )





)", min, max);

----------------------------------------------------------------
norm_s, theta, tsk, s, t_r, t_d, norm_irf,cer_min
0       1      2   3   4     5    6        7 
[0] * 
  (
  0.5 * (TMath::Erf((x-[1]-[2])/[3]/TMath::Sqrt(2))+TMath::Erf([2]/[3]/TMath::Sqrt(2)))
   +
  ([4]/([5]-[4]) * 0.5 * TMath::Exp((-2*x*[4]+2*[4]*[1]+2*[4]*[2]-[3]*[3])/2/[4]/[4]) * (TMath::Erf((x-[1]-[2]-[3]*[3]/[4])/[3]/TMath::Sqrt(2))+TMath::Erf(([2]+[3]*[3]/[4])/[3]/TMath::Sqrt(2))))
   -
  ([5]/([5]-[4]) * 0.5 * TMath::Exp((-2*x*[5]+2*[5]*[1]+2*[5]*[2]-[3]*[3])/2/[5]/[5]) * (TMath::Erf((x-[1]-[2]-[3]*[3]/[5])/[3]/TMath::Sqrt(2))+TMath::Erf(([2]+[3]*[3]/[5])/[3]/TMath::Sqrt(2))))
  )
+
[6] * TMath::Sqrt(TMath::Pi()/2) * (-[3]) * (TMath::Erf(([2]+[1]-x)/([3]*TMath::Sqrt(2)))-TMath::Erf(([2]+[1]-[7])/([3]*TMath::Sqrt(2))))", min, max);
   
 CTot -> SetParameters(norm_irf, l, tsk, theta, cer_min);

 -----------------------------------------------------------



s, norm_irf, norm_s, t_d, tsk, t_r, theta, l, norm_c, cer_min, N, n
0   1          2      3    4    5    6     7   8        9      10 11


TMath::Binomial([10], [11]) * [11] *

(
  [2] * 
  (
  0.5 * (TMath::Erf((x-[6]-[2])/[4]/TMath::Sqrt(2))+TMath::Erf([4]/[0]/TMath::Sqrt(2)))
   +
  ([5]/([3]-[5]) * 0.5 * TMath::Exp((-2*x*[5]+2*[5]*[6]+2*[5]*[4]-[0]*[0])/2/[5]/[5]) * (TMath::Erf((x-[6]-[4]-[0]*[0]/[5])/[0]/TMath::Sqrt(2))+TMath::Erf(([4]+[0]*[0]/[5])/[0]/TMath::Sqrt(2))))
   -
  ([3]/([3]-[5]) * 0.5 * TMath::Exp((-2*x*[3]+2*[3]*[6]+2*[3]*[4]-[0]*[0])/2/[3]/[3]) * (TMath::Erf((x-[6]-[4]-[0]*[0]/[3])/[0]/TMath::Sqrt(2))+TMath::Erf(([4]+[0]*[0]/[3])/[0]/TMath::Sqrt(2))))
  )
  +
  [1] * TMath::Sqrt(TMath::Pi()/2) * (-[0]) * (TMath::Erf(([4]+[6]-x)/([0]*TMath::Sqrt(2)))-TMath::Erf(([4]+[6]-[9])/([0]*TMath::Sqrt(2))))
)  ^([11]-1) 

*

(
  1 - ( [2] * 
  (
  0.5 * (TMath::Erf((x-[6]-[2])/[4]/TMath::Sqrt(2))+TMath::Erf([4]/[0]/TMath::Sqrt(2)))
   +
  ([5]/([3]-[5]) * 0.5 * TMath::Exp((-2*x*[5]+2*[5]*[6]+2*[5]*[4]-[0]*[0])/2/[5]/[5]) * (TMath::Erf((x-[6]-[4]-[0]*[0]/[5])/[0]/TMath::Sqrt(2))+TMath::Erf(([4]+[0]*[0]/[5])/[0]/TMath::Sqrt(2))))
   -
  ([3]/([3]-[5]) * 0.5 * TMath::Exp((-2*x*[3]+2*[3]*[6]+2*[3]*[4]-[0]*[0])/2/[3]/[3]) * (TMath::Erf((x-[6]-[4]-[0]*[0]/[3])/[0]/TMath::Sqrt(2))+TMath::Erf(([4]+[0]*[0]/[3])/[0]/TMath::Sqrt(2))))
  )
  +
  [1] * TMath::Sqrt(TMath::Pi()/2) * (-[0]) * (TMath::Erf(([4]+[6]-x)/([0]*TMath::Sqrt(2)))-TMath::Erf(([4]+[6]-[9])/([0]*TMath::Sqrt(2)))))
) ^([10]-[11]) 

*

(
  TMath::Sqrt(TMath::Pi() / 2) * [0] * [1] * [2] * 
  ( 
    - TMath::Exp(([0]*[0]-2*x*[3]+2*[3]*[4]+2*[3]*[6])/(2*[3]*[3]))*
      (
       TMath::Erf(([3]*([4]-x+[6]) + [0]*[0])/(TMath::Sqrt(2)*[0]*[3]))-TMath::Erf(([3]*[4] +[0]*[0])/(TMath::Sqrt(2)*[0]*[3]))
      )
    + TMath::Exp(([0]*[0]-2*x*[5]+2*[5]*[4]+2*[5]*[6])/(2*[5]*[5]))*
      (
        TMath::Erf(([5]*([4]-x+[6]) + [0]*[0])/(TMath::Sqrt(2)*[0]*[5]))-TMath::Erf(([5]*[4] +[0]*[0])/(TMath::Sqrt(2)*[0]*[5]))
      )
  )
  + 
  1.0 / (TMath::Sqrt([7]*[7]+[0]*[0])) * TMath::Sqrt(TMath::Pi() / 2) * [7] * [0] * [8] * [1] * 
  (
    TMath::Exp(-([4]+[6]-x)*([4]+[6]-x)/2/([7]*[7]+[0]*[0]))*
      (
        TMath::Erf((-[4]*[7]*[7]+[6]*[0]*[0]+[7]*[7]*(x-[9])-[0]*[0]*x+[0]*[0]*(x-[9]))/(TMath::Sqrt(2)*[0]*[7]*TMath::Sqrt([7]*[7]+[0]*[0])))
        -
        TMath::Erf((-[4]*[7]*[7]+[6]*[0]*[0]-[0]*[0]*x)/(TMath::Sqrt(2)*[0]*[7]*TMath::Sqrt([7]*[7]+[0]*[0])))
      )
  )



































